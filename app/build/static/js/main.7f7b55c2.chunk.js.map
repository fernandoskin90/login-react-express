{"version":3,"sources":["components/post/styles.js","components/post/index.js","utils/localStorage.js","hooks/validateUser.js","constants.js","screens/home/styles.js","screens/home/index.js","screens/login/styles.js","screens/login/index.js","screens/register/styles.js","screens/register/index.js","app.js","serviceWorker.js","index.js"],"names":["Item","styled","div","_templateObject","Title","_templateObject2","Body","_templateObject3","Post","_ref","body","title","react_default","a","createElement","setUserToken","token","callback","arguments","length","undefined","window","localStorage","setItem","getUserToken","getItem","useValidateUser","_useState","useState","_useState2","Object","slicedToArray","error","setError","_useState3","_useState4","userValid","setUserValid","_useState5","_useState6","loading","setLoading","useEffect","fetch","method","headers","Authorization","concat","then","res","json","data","catch","console","HomeContent","styles_templateObject","LogoutButton","button","styles_templateObject2","Home","history","loadingPosts","setLoadingPosts","posts","setPosts","_useValidateUser","Accept","Content-Type","_ref2","message","warn","react_router","to","map","_ref3","index","post","key","onClick","removeItem","removeUserToken","push","rotateSpinner","keyframes","login_styles_templateObject","LoginContent","login_styles_templateObject2","LoginContainer","styles_templateObject3","LoginInput","input","_templateObject4","LoginButton","_templateObject5","Spinner","_templateObject6","ErrorMessage","_templateObject7","Login","loadingForm","setLoadingForm","email","setEmail","password","setPassword","_useState7","_useState8","errorMessage","setErrorMessage","onChange","e","target","value","placeholder","type","disabled","JSON","stringify","register_styles_templateObject","register_styles_templateObject2","register_styles_templateObject3","styles_templateObject4","styles_templateObject5","styles_templateObject6","styles_templateObject7","Register","name","setName","_useState9","_useState10","username","setUsername","_useState11","_useState12","styles_LoginContainer","styles_LoginContent","styles_LoginInput","styles_LoginButton","userName","styles_Spinner","styles_ErrorMessage","App","react_router_dom","basename","exact","path","component","render","Boolean","location","hostname","match","ReactDOM","app","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f7b55c2.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.div`\n  border: 1px gray solid;\n  box-shadow: 2px 2px 10px 2px lightgray;\n  display: flex;\n  flex-direction: column;\n  max-width: 300px;\n  padding: 10px;\n`;\n\nexport const Title = styled.div`\n  font-weight: bold;\n`\n\nexport const Body = styled.div`\n  font-style: italic;\n`\n\n","import React from 'react';\n\nimport { Body, Item, Title } from './styles';\n\nconst Post = ({\n  body,\n  title\n}) => (\n  <Item>\n    <Title>{title}</Title>\n    <Body>{body}</Body>\n  </Item>\n);\n\nexport default Post;\n","export const setUserToken = (token, callback = () => {}) => {\n  window.localStorage.setItem('posts_app_token', token);\n  callback();\n}\n\nexport const removeUserToken = (callback = () => {}) => {\n  window.localStorage.removeItem('posts_app_token');\n  callback();\n}\n\nexport const getUserToken = () => \n  window.localStorage.getItem('posts_app_token');\n","import { useEffect, useState } from 'react';\n\nimport { validateUserByToken } from '../constants';\nimport { getUserToken } from '../utils/localStorage';\n\nexport const useValidateUser = () => {\n  const [error, setError] = useState(false);\n  const [userValid, setUserValid] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(function () {\n    const token = getUserToken()\n\n    if (token) {\n      fetch(validateUserByToken, {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      })\n        .then(res => res.json())\n        .then(({ data }) => {\n          setUserValid(data ? data.userValid : false);\n          setLoading(false);\n        })\n        .catch((error) => {\n          console.error(error);\n          setError(true);\n        })\n    } else {\n      setLoading(false);\n      setError(true);\n    }\n  }, [])\n\n  return {\n    error,\n    loading,\n    userValid\n  }\n}\n","export const validateUserByToken = 'http://localhost:5000/user/authByToken';\n\nexport const loginUrl = 'http://localhost:5000/user/login';\n\nexport const registerUrl = 'http://localhost:5000/user/register';\n\nexport const getPostsUrl = 'http://localhost:5000/posts'\n","import styled from 'styled-components';\n\nexport const HomeContent = styled.div`\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(auto-fill, 300px);\n  grid-template-rows: repeat(auto-fill, 1fr);\n  height: calc(100vh - 60px);\n  overflow-y: auto;\n  padding: 20px;\n`;\n\nexport const LogoutButton = styled.button`\n  background-color: tomato;\n  border-radius: 20px;\n  bottom: 32px;\n  color: #FFF;\n  cursor: pointer;\n  font-size: 1.1rem;\n  position: fixed;\n  right: 32px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport Post from '../../components/post';\nimport { useValidateUser } from '../../hooks/validateUser';\nimport { getUserToken, removeUserToken } from '../../utils/localStorage';\nimport { getPostsUrl } from '../../constants';\n\nimport { HomeContent, LogoutButton } from './styles';\n\nconst Home = ({ history }) => {\n  const [ loadingPosts, setLoadingPosts ] = useState(false);\n  const [ posts, setPosts ] = useState([]);\n  const { error, loading, userValid } = useValidateUser();\n\n  useEffect(() => {\n    if (userValid) {\n      setLoadingPosts(true);\n      fetch(getPostsUrl, {\n        headers: {\n          Authorization: `Bearer ${getUserToken()}`,\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      })\n        .then(res => res.json())\n        .then(({ data, message }) => {\n          setLoadingPosts(false);\n          setPosts(data);\n        })\n        .catch((error) => {\n          console.warn(error)\n        })\n    }\n  }, [userValid])\n\n  if (error) {\n    return <Redirect to=\"/login\" />\n  }\n\n  if (loading || loadingPosts) {\n    return (\n      <h1>Loading ...</h1>\n    )\n  }\n\n  return (\n    <HomeContent>\n      {\n        posts.map(({ body, title }, index) => (\n          <Post\n            body={body}\n            key={`post-${index}`}  \n            title={title}\n          />\n        ))\n      }\n      <LogoutButton\n        onClick={() => {\n          removeUserToken(() => { history.push('/login') });\n        }}\n      >\n        Logout\n      </LogoutButton>\n    </HomeContent>\n  );\n};\n\nexport default Home;\n","import styled, { keyframes } from 'styled-components';\n\nconst rotateSpinner = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoginContent = styled.div`\n  justify-content: center;\n  border: 1px solid grey;\n  box-shadow: 2px 2px 5px 2px gray;\n  display: flex;\n  flex-direction: column;\n  height: 150px;\n  position: relative;\n  width: 200px;\n`;\n\nexport const LoginContainer = styled.div`\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  height: calc(100vh - 20px);\n`;\n\nexport const LoginInput = styled.input`\n  margin: 5px auto;\n`;\n\nexport const LoginButton = styled.button`\n  margin: 5px auto;\n  max-width: 100px;\n`;\n\nexport const Spinner = styled.div`\n  animation: ${rotateSpinner} 1.5s linear infinite;\n  border: 3px tomato solid;\n  border-right: 3px transparent solid;\n  border-radius: 50%;\n  bottom: 35px;\n  height: 15px;\n  position: absolute;\n  right: 45px;\n  width: 15px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: tomato;\n  font-size: 1rem;\n  text-align: center;\n`;\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\n\nimport {\n  ErrorMessage,\n  LoginButton,\n  LoginContainer,\n  LoginContent,\n  LoginInput,\n  Spinner\n} from './styles';\nimport { setUserToken } from '../../utils/localStorage';\nimport { useValidateUser } from '../../hooks/validateUser';\nimport { loginUrl } from '../../constants';\n\nconst Login = ({\n  history\n}) => {\n  const [loadingForm, setLoadingForm] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    loading,\n    userValid\n  } = useValidateUser();\n\n  const loginUser = () => {\n    setLoadingForm(true);\n    setErrorMessage('');\n    fetch(loginUrl, {\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    })\n      .then(res => res.json())\n      .then(({ data, message }) => {\n        setLoadingForm(false);\n        if (data && data.token) {\n          setUserToken(\n            data.token,\n            () => history.push('/')\n          );\n        }\n        if (!data && message) {\n          setErrorMessage(message);\n        }\n      })\n      .catch((error) => {\n        console.warn(error)\n      })\n  }\n\n  if (loading) {\n    return (\n      <div>Loading ...</div>\n    );\n  }\n\n  if (userValid) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <LoginContainer>\n      <LoginContent>\n        <LoginInput\n          onChange={e => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          value={email}\n        />\n        <LoginInput\n          onChange={e => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          type=\"password\"\n          value={password}\n        />\n        <LoginButton\n          disabled={!email || !password || loadingForm}\n          onClick={loginUser}\n        >\n          Login\n        </LoginButton>\n        { loadingForm && <Spinner /> }\n        <LoginButton\n          onClick={() => history.push('/register')}\n        >\n          To register\n        </LoginButton>\n        <ErrorMessage>{errorMessage}</ErrorMessage>\n      </LoginContent>\n    </LoginContainer>\n  )\n};\n\nexport default Login;\n","import styled, { keyframes } from 'styled-components';\n\nconst rotateSpinner = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LoginContent = styled.div`\n  justify-content: center;\n  border: 1px solid grey;\n  box-shadow: 2px 2px 5px 2px gray;\n  display: flex;\n  flex-direction: column;\n  height: 250px;\n  position: relative;\n  width: 250px;\n`;\n\nexport const LoginContainer = styled.div`\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  height: calc(100vh - 20px);\n`;\n\nexport const LoginInput = styled.input`\n  margin: 5px auto;\n`;\n\nexport const LoginButton = styled.button`\n  margin: 5px auto;\n  max-width: 100px;\n`;\n\nexport const Spinner = styled.div`\n  animation: ${rotateSpinner} 1.5s linear infinite;\n  border: 3px tomato solid;\n  border-right: 3px transparent solid;\n  border-radius: 50%;\n  bottom: 35px;\n  height: 15px;\n  position: absolute;\n  right: 45px;\n  width: 15px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: tomato;\n  font-size: 1rem;\n  text-align: center;\n`;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport {\n  ErrorMessage,\n  LoginButton,\n  LoginContainer,\n  LoginContent,\n  LoginInput,\n  Spinner\n} from './styles';\nimport { setUserToken } from '../../utils/localStorage';\nimport { useValidateUser } from '../../hooks/validateUser';\nimport { registerUrl } from '../../constants';\n\nconst Register = ({\n  history\n}) => {\n  const [loadingForm, setLoadingForm] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const {\n    loading,\n    userValid\n  } = useValidateUser();\n\n  const registerUser = () => {\n    setLoadingForm(true);\n    setErrorMessage('');\n    fetch(registerUrl, {\n      body: JSON.stringify({\n        email,\n        name,\n        password,\n        userName: username\n      }),\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    })\n      .then(res => res.json())\n      .then(({ data, message }) => {\n        setLoadingForm(false);\n        if (data && data.token) {\n          setUserToken(\n            data.token,\n            () => history.push('/')\n          );\n        }\n\n        if (!data && message) {\n          setErrorMessage(message);\n        }\n      })\n      .catch((error) => {\n        console.warn(error)\n      })\n  }\n\n  if (loading) {\n    return (\n      <div>Loading ...</div>\n    );\n  }\n\n  if (userValid) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <LoginContainer>\n      <LoginContent>\n        <LoginInput\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Name\"\n          value={name}\n        />\n        <LoginInput\n          onChange={e => setUsername(e.target.value)}\n          placeholder=\"Username\"\n          value={username}\n        />\n        <LoginInput\n          onChange={e => setEmail(e.target.value)}\n          placeholder=\"Email\"\n          value={email}\n        />\n        <LoginInput\n          onChange={e => setPassword(e.target.value)}\n          placeholder=\"Password\"\n          type=\"password\"\n          value={password}\n        />\n        <LoginButton\n          disabled={!email || !password || !name || !username || loadingForm}\n          onClick={registerUser}\n        >\n          Register\n        </LoginButton>\n        { loadingForm && <Spinner /> }\n        <LoginButton\n          onClick={() => history.push('/login')}\n        >\n          To login\n        </LoginButton>\n        <ErrorMessage>{errorMessage}</ErrorMessage>\n      </LoginContent>\n    </LoginContainer>\n  )\n};\n\nexport default Register;\n","import React from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nimport Home from './screens/home';\nimport Login from './screens/login';\nimport Register from './screens/register';\n\nconst App = () => (\n  <HashRouter basename=\"/\">\n    <Switch>\n      <Route\n        exact\n        path=\"/login\"\n        component={Login}\n      />\n      <Route\n        exact\n        path=\"/register\"\n        component={Register}\n      />\n      <Route\n        exact\n        path=\"/\"\n        component={Home}\n      />\n      <Route\n        render={() => <Redirect to=\"/\" />}\n      />\n    </Switch>\n  </HashRouter>\n);\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}